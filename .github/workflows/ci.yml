name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium]
        env: [dev]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: npm ci --legacy-peer-deps
      - run: npx playwright install --with-deps
      - name: Create .env file
        run: |
          cat > .env << 'EOL'
          # API Configuration
          API_BASE_URL=https://reqres.in/api
          API_URL=https://reqres.in/api
          API_KEY=reqres-free-v1

          # Web Configuration
          BASE_URL=https://opensource-demo.orangehrmlive.com
          EXAMPLE_URL=https://example.com
          TODO_APP_URL=https://demo.playwright.dev/todomvc
          ORANGEHRM_URL=https://opensource-demo.orangehrmlive.com/web/index.php/auth/login
          PLAYWRIGHT_DOCS_URL=https://playwright.dev/
          AUTOMATION_EXERCISE_URL=https://automationexercise.com
          SELECTORS_HUB_URL=https://selectorshub.com/xpath-practice-page/

          # Salesforce Configuration
          SF_USERNAME=dummy@example.com
          SF_PASSWORD=dummypassword
          SF_LOGIN_URL=https://login.salesforce.com
          SF_INSTANCE_URL=https://example.lightning.force.com
          
          # Credentials
          USERNAME=Admin
          PASSWORD=admin123
          INVALID_USERNAME=invalid
          INVALID_PASSWORD=wrong
          API_TOKEN=your_api_token

          # Test Data
          TEST_USER_ID=2
          TEST_NONEXISTENT_USER_ID=999
          TEST_PAGE=1
          MAX_VALID_USER_ID=12
          MAX_PAGE_WITH_DATA=2
          USERS_PER_PAGE=6
          TEST_USER_IDS=1,2,3,23
          TEST_PAGES=1,2,3

          # External Resources
          AXE_CORE_CDN=https://cdnjs.cloudflare.com/ajax/libs/axe-core/4.7.0/axe.min.js
          
          # Browser Configuration
          HEADLESS=true
          EOL
      - run: npm run test -- --project=${{ matrix.browser }}
      
      - name: Check for Salesforce credentials
        id: check_sf_creds
        run: |
          if [ -n "${{ secrets.SF_USERNAME }}" ] && [ -n "${{ secrets.SF_PASSWORD }}" ]; then
            echo "has_creds=true" >> $GITHUB_OUTPUT
          else
            echo "has_creds=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Setup Salesforce Authentication
        if: steps.check_sf_creds.outputs.has_creds == 'true'
        env:
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
        run: |
          echo "Running Salesforce authentication setup..."
          mkdir -p auth
          node src/tests/salesforce/global-setup.js
      
      - name: Skip Salesforce Authentication
        if: steps.check_sf_creds.outputs.has_creds != 'true'
        run: |
          echo "::warning::Salesforce credentials not found in GitHub Secrets. Skipping Salesforce tests."
          echo "To run Salesforce tests, add SF_USERNAME and SF_PASSWORD to your GitHub repository secrets."
      
      - name: Run Salesforce Tests
        if: steps.check_sf_creds.outputs.has_creds == 'true'
        env:
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
        run: npm run test -- --project=salesforce
        continue-on-error: true
        
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: reports
          path: |
            playwright-report/
            test-results/
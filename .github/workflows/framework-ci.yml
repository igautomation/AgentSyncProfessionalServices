name: Framework CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test-framework:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@agentsync'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create .env file
        run: |
          cp .env.example .env
      
      - name: Run linting with CI config
        run: npx eslint --config .eslintrc.ci.js . --max-warnings 1000
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Run core tests
        run: npx playwright test src/tests/core/framework-validation.spec.js
        
      - name: Run API tests
        run: npx playwright test --project=api
        continue-on-error: true
      
      - name: Build framework
        run: npm run build
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test-results/
            playwright-report/
  
  publish-framework:
    needs: test-framework
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@agentsync'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build framework
        run: npm run build
      
      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}